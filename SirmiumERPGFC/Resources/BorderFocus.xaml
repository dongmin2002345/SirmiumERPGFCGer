<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:local="clr-namespace:SirmiumERPGFC.Resources">



    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource BlackColorBrush}" />
                <Setter Property="BorderThickness" Value="3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource BlackColorBrush}" />
                <Setter Property="BorderThickness" Value="3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource {x:Type PasswordBox}}">
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource BlackColorBrush}" />
                <Setter Property="BorderThickness" Value="3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource {x:Type DatePicker}}">
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource BlackColorBrush}" />
                <Setter Property="BorderThickness" Value="3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource WhiteColorBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BlackColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource BlackColorBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="MinHeight" Value="26" />
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Foreground" Value="{DynamicResource WhiteColorBrush}"/>
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Foreground" Value="{DynamicResource WhiteColorBrush}"/>
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Foreground" Value="{DynamicResource BlackColorBrush}"/>
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#007ACC" />
        <Setter Property="BorderBrush" Value="{DynamicResource BlackColorBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="5" BorderBrush="Black" BorderThickness="1.5">
                        <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                        TextElement.FontWeight="Regular">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Background" Value="#007ACC" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Background" Value="#007ACC" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Background" Value="#007ACC" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="DarkGray" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="#007ACC" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource {x:Type Expander}}">
        <!--<Setter Property="Background" Value="{DynamicResource WhiteColorBrush}" />-->
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource BlackColorBrush}" />
        <Setter Property="BorderThickness" Value="2" />
    </Style>

    <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource {x:Type GroupBox}}">
        <!--<Setter Property="Background" Value="{DynamicResource WhiteColorBrush}" />-->
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource BlackColorBrush}" />
        <Setter Property="BorderThickness" Value="2" />
    </Style>

    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#007ACC"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" BorderThickness="1,1,1,1" BorderBrush="Gray" CornerRadius="4,4,0,0" Margin="2 2 2 0">
                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentColorBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource WhiteColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource WhiteColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>